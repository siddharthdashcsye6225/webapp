name: Packer Build

on:
  pull_request:
    types: [closed]

jobs:
  integration_tests:
    name: Integration Tests and Packer Build - Post Merge
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged == true

    env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: csye6225
        INSTANCE_TEMPLATE_NAME: ${{ secrets.TEMPLATE_INSTANCE_NAME }}
        METADATA_SCRIPT: ${{ secrets.METADATA_SCRIPT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PostgreSQL and dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y postgresql
            sudo service postgresql start
            sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD '${{ env.POSTGRES_PASSWORD }}';"
            sudo -u postgres createdb csye6225    

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.0

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run integration tests
        run: pytest csye6225project/csye6225/tests/test_integration.py

      - name: Create artifact
        run: |
          ls -ltr
          pwd
          ls -ltr /home/runner/work/webapp/webapp
          tar -czf project-artifact.tar.gz -C /home/runner/work/webapp .
          mkdir build
          mv project-artifact.tar.gz build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-package
          path: build/project-artifact.tar.gz

      - name: Install Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer

      - name: Authenticate with gcloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Install Packer Google Compute Engine Plugin
        run: |
          packer plugins install github.com/hashicorp/googlecompute

      - name: Check Packer Template Format
        run: |
          packer fmt -check packer/packer-build.pkr.hcl
          if [ $? -eq 1 ]; then
            echo "Packer template format is incorrect. Please run 'packer fmt' to format it properly."
            exit 1
          fi

      - name: Validate Packer Template
        run: |
          pwd
          ls -ltr
          packer validate packer/packer-build.pkr.hcl
          if [ $? -ne 0 ]; then
            echo "Packer template validation failed. Please check the template for errors."
            exit 1
          fi

#      - name: Build Image with Packer Template
#        run: |
#          pwd
#          packer build -var 'postgres_password=${{ env.POSTGRES_PASSWORD }}' packer/packer-build.pkr.hcl

      - name: Create Instance Template
        run: |
          IMAGE_ID=$(gcloud compute images list --sort-by=~creationTimestamp --format='value(NAME)' --limit=1)
          echo "$IMAGE_ID"
          echo "Instance Template Name: ${{ env.INSTANCE_TEMPLATE_NAME }}:"
          gcloud compute instance-templates create webapp-instance-template-20240410-051254 \
            --project=dev-siddharth-dash-csye6225 \
            --description="WebApp Regional Compute Instance Template" \
            --machine-type=e2-medium \
            --network-interface=network-tier=PREMIUM,subnet=webapp \
            --instance-template-region=us-central1 \
            --metadata=startup-script="${METADATA_SCRIPT}" \
            --maintenance-policy=MIGRATE \
            --maintenance-policy=MIGRATE \
            --provisioning-model=STANDARD \
            --service-account=webapp-service-account@dev-siddharth-dash-csye6225.iam.gserviceaccount.com \
            --scopes=https://www.googleapis.com/auth/pubsub,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.read \
            --region=us-central1 \
            --tags=webapp-vm \
            --create-disk=auto-delete=yes,boot=yes,device-name=persistent-disk-0,image=projects/dev-siddharth-dash-csye6225/global/images/$IMAGE_ID,kms-key=projects/dev-siddharth-dash-csye6225/locations/us-central1/keyRings/webapp-key-ring-9c186c9e/cryptoKeys/vm-crypto-key,mode=rw,size=100,type=pd-standard, \
            --no-shielded-secure-boot \
            --shielded-vtpm \
            --shielded-integrity-monitoring \
            --reservation-affinity=any

#      - name: Configure Managed Instance Group
#        run: |
#          gcloud compute instance-groups managed set-instance-template mig-webapp \
#            --template='webapp-instance-template-20240410-051246' \
#            --region=us-central1 \
#            --project=dev-siddharth-dash-csye6225

      - name: Start Rolling Update
        run: |
          gcloud compute instance-groups managed rolling-action start-update mig-webapp \
            --version='template=projects/dev-siddharth-dash-csye6225/regions/us-central1/instanceTemplates/webapp-instance-template-20240410-051254' \
            --region=us-central1 \
            --project=dev-siddharth-dash-csye6225 \
            --max-unavailable=3 \
            --type='proactive' \
            --minimal-action='replace' \
            --most-disruptive-allowed-action='replace' \
            --replacement-method='substitute'

      - name: Wait for rolling update to finish
        run: |
          gcloud compute instance-groups managed wait-until mig-webapp \
          --version-target-reached \
          --region=us-central1
